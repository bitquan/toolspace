{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Docs: Build Index",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:summary"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
            "echo 'üöÄ Building & Deploying to staging...' && flutter build web --release --dart-define-from-file=env/staging.json && firebase deploy --only hosting:staging,functions --project toolz-space-staging --config firebase.staging.json"
    },
    {
      "label": "Docs: Validate (strict)",
      "type": "shell",
      "command": "npm",
      "args": ["run", "docs:validate"],
      "group": "build",
      "presentation": {
        "echo": true,
            "cwd": "${workspaceFolder}",
            "env": {
              "NODE_ENV": "staging",
              "FIREBASE_PROJECT_ID": "toolz-space-staging"
            }
        "clear": false
          "detail": "üöÄ Build Flutter web and deploy Hosting+Functions to staging Firebase project"
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Runs strict validation of all documentation files"
    },
    {
            "echo 'üß™ Running full staging validation...' && node scripts/e2e/billing-checkout.mjs && node scripts/e2e/webhook-ack.mjs && node scripts/e2e/smoke-suite.mjs && node scripts/staging-readiness-report.mjs"
      "type": "shell",
      "command": "node",
      "args": ["scripts/assign-to-copilot.mjs", "${input:issueNumber}"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Assigns a GitHub issue to the Copilot bot and adds 'ready' label for auto-development"
    },
    {
      "label": "Install Node Dependencies",
      "type": "shell",
      "command": "npm",
      "args": ["install"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Install Node.js dependencies required for automation scripts"
    },
    {
      "label": "Create Issue",
      "type": "shell",
      "command": "node",
      "args": ["scripts/create-and-assign-issue.mjs"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Create a new GitHub issue with interactive prompts"
    },
    {
      "label": "Create Issue and Assign to Copilot",
      "type": "shell",
      "command": "node",
      "args": ["scripts/create-and-assign-issue.mjs", "--assign"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Create a new GitHub issue and automatically assign to Copilot pipeline"
    },
    {
      "label": "Run Auto-Assignment (Dry Run)",
      "type": "shell",
      "command": "node",
      "args": ["scripts/auto-assign-new-issues.mjs", "--dry-run"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Preview auto-assignment of recent issues without making changes"
    },
    {
      "label": "Approve All Copilot PRs",
      "type": "shell",
      "command": "node",
      "args": ["scripts/approve-copilot-prs.mjs"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Bulk approve all open pull requests created by Copilot bot"
    },
    {
      "label": "Approve Copilot PRs (Dry Run)",
      "type": "shell",
      "command": "node",
      "args": ["scripts/approve-copilot-prs.mjs", "--dry-run"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Preview bulk approval of Copilot PRs without making changes"
    },
    {
      "label": "üßπ Cleanup Workflows (Dry Run)",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "workflow-cleanup.yml",
        "-f",
        "cleanup_scope=failed_runs",
        "-f",
        "dry_run=true"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Preview workflow cleanup - shows what would be cleaned up without making changes"
    },
    {
      "label": "üßπ Cleanup Failed Workflows",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "workflow-cleanup.yml",
        "-f",
        "cleanup_scope=failed_runs",
        "-f",
        "dry_run=false"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Clean up all failed and cancelled workflow runs"
    },
    {
      "label": "üßπ Cleanup Old Workflows",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "workflow-cleanup.yml",
        "-f",
        "cleanup_scope=old_runs",
        "-f",
        "days_to_keep=7",
        "-f",
        "dry_run=false"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Clean up workflow runs older than 7 days"
    },
    {
      "label": "üßπ Full Workflow Cleanup",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "workflow-cleanup.yml",
        "-f",
        "cleanup_scope=full_cleanup",
        "-f",
        "dry_run=false"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "‚ö†Ô∏è WARNING: Complete cleanup of ALL workflow runs, cache, and artifacts"
    },
    {
      "label": "üî• Delete ALL Workflows",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "workflow-cleanup.yml",
        "-f",
        "cleanup_scope=all_runs",
        "-f",
        "dry_run=false"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "üî• DELETE ALL workflow runs (not reversible!)"
    },
    {
      "label": "üî• Preview Delete ALL Workflows",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "workflow-cleanup.yml",
        "-f",
        "cleanup_scope=all_runs",
        "-f",
        "dry_run=true"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Preview what would be deleted when deleting ALL workflows"
    },
    {
      "label": "üî•üí• NUCLEAR Cleanup",
      "type": "shell",
      "command": "gh",
      "args": [
        "workflow",
        "run",
        "nuclear-cleanup.yml",
        "-f",
        "confirmation=DELETE_ALL_WORKFLOWS",
        "-f",
        "keep_recent=0"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "üî•üí• NUCLEAR: Immediately delete EVERYTHING (maximum destruction!)"
    },
    {
      "label": "üî• Emulators (staging)",
      "type": "shell",
      "command": "firebase",
      "args": [
        "emulators:start",
        "--only",
        "auth,firestore,functions,storage",
        "--project",
        "toolz-space-staging"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "FIREBASE_PROJECT_ID": "toolz-space-staging"
        }
      },
      "isBackground": true,
      "problemMatcher": [],
      "detail": "Start Firebase emulators (auth, firestore, functions, storage) for staging"
    },
    {
      "label": "üí≥ Stripe webhook (staging)",
      "type": "shell",
      "command": "stripe",
      "args": [
        "listen",
        "--forward-to",
        "http://localhost:5001/toolz-space-staging/us-central1/stripeWebhook"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "isBackground": true,
      "problemMatcher": [],
      "detail": "Forward Stripe events to local functions emulator for staging"
    },
    {
      "label": "üåê Flutter Web (staging)",
      "type": "shell",
      "command": "flutter",
      "args": [
        "run",
        "-d",
        "chrome",
        "--dart-define-from-file=env/staging.json"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "isBackground": true,
      "problemMatcher": [],
      "detail": "Run Flutter web app with staging configuration"
    },
    {
      "label": "üßπ Cleanup Helper (PowerShell)",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-ExecutionPolicy",
        "Bypass",
        "-File",
        "scripts/workflow-cleanup.ps1",
        "-Action",
        "${input:cleanupAction}"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Interactive PowerShell cleanup helper with confirmation prompts"
    },
    {
      "label": "üöÄ Build for Staging",
      "type": "shell",
      "command": "flutter",
      "args": [
        "build",
        "web",
        "--dart-define-from-file=env/staging.json",
        "--web-renderer=html"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Build Flutter web app with staging configuration"
    },
    {
      "label": "üåê Deploy Staging (Hosting Only)",
      "type": "shell",
      "command": "firebase",
      "args": [
        "deploy",
        "--only",
        "hosting:staging",
        "--config",
        "firebase.staging.json",
        "--project",
        "toolz-space-staging"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Deploy web app to staging hosting (no functions)",
      "dependsOn": "üöÄ Build for Staging"
    },
    {
      "label": "‚ö° Deploy Staging (Functions Only)",
      "type": "shell",
      "command": "firebase",
      "args": [
        "deploy",
        "--only",
        "functions",
        "--config",
        "firebase.staging.json",
        "--project",
        "toolz-space-staging"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Deploy functions to staging with enhanced logging"
    },
    {
      "label": "üéØ Full Staging Deploy",
      "type": "shell",
      "command": "firebase",
      "args": [
        "deploy",
        "--config",
        "firebase.staging.json",
        "--project",
        "toolz-space-staging"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Full staging deployment (hosting + functions + rules)",
      "dependsOn": "üöÄ Build for Staging"
    },
    {
      "label": "üßπ Flutter Clean",
      "type": "shell",
      "command": "flutter",
      "args": ["clean"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Clean Flutter build artifacts"
    },
    {
      "label": "üì¶ Flutter Pub Get",
      "type": "shell",
      "command": "flutter",
      "args": ["pub", "get"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Get Flutter dependencies"
    },
    {
      "label": "üîß Flutter Clean & Get",
      "type": "shell",
      "command": "flutter",
      "args": ["clean"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Clean and get Flutter dependencies",
      "dependsOn": ["üßπ Flutter Clean"],
      "dependsOrder": "sequence"
    },
    {
      "label": "üîç Flutter Analyze",
      "type": "shell",
      "command": "flutter",
      "args": ["analyze"],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$dart-build_runner"],
      "detail": "Run Flutter static analysis"
    },
    {
      "label": "üß™ Flutter Test",
      "type": "shell",
      "command": "flutter",
      "args": ["test"],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$dart-flutter"],
      "detail": "Run all Flutter tests"
    },
    {
      "label": "üèÉ Flutter Run (Chrome)",
      "type": "shell",
      "command": "flutter",
      "args": ["run", "-d", "chrome"],
      "isBackground": true,
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Run Flutter app in Chrome browser"
    },
    {
      "label": "üñ•Ô∏è Flutter Run (macOS)",
      "type": "shell",
      "command": "flutter",
      "args": ["run", "-d", "macos"],
      "isBackground": true,
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Run Flutter app on macOS desktop"
    },
    {
      "label": "üì± Flutter Devices",
      "type": "shell",
      "command": "flutter",
      "args": ["devices"],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "List all available Flutter devices"
    },
    {
      "label": "üöÄ Flutter Doctor",
      "type": "shell",
      "command": "flutter",
      "args": ["doctor", "-v"],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": [],
      "detail": "Check Flutter environment setup"
    },
    {
      "label": "üìä Flutter Build Web",
      "type": "shell",
      "command": "flutter",
      "args": ["build", "web"],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$dart-flutter"],
      "detail": "Build Flutter web application"
    },
    {
      "label": "üî• Start Firebase Emulators",
      "type": "shell",
      "command": "firebase",
      "args": ["emulators:start"],
      "isBackground": true,
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": {
        "pattern": {
          "regexp": "^.*$",
          "file": 1,
          "location": 2,
          "message": 3
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Starting emulators",
          "endsPattern": "All emulators ready"
        }
      },
      "detail": "Start Firebase emulators (Auth:9099, Firestore:8080, Functions:5001, Hosting:5000, UI:4000)"
    },
    {
      "label": "üí≥ Start Stripe CLI Webhook",
      "type": "shell",
      "command": "stripe",
      "args": [
        "listen",
        "--forward-to",
        "localhost:5001/toolspace-beta/us-central1/stripeWebhook"
      ],
      "isBackground": true,
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "focus": false
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": {
        "pattern": {
          "regexp": "^.*$",
          "file": 1,
          "location": 2,
          "message": 3
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Getting ready",
          "endsPattern": "Ready!"
        }
      },
      "detail": "Start Stripe CLI webhook forwarding to local functions"
    },
    {
      "label": "üöÄ Start Development Environment",
      "dependsOn": [
        "üî• Start Firebase Emulators",
        "üí≥ Start Stripe CLI Webhook"
      ],
      "dependsOrder": "parallel",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "detail": "Start both Firebase emulators and Stripe CLI webhook forwarding"
    },
    {
      "label": "üß™ Run Smoke Tests",
      "type": "shell",
      "command": "dart",
      "args": ["run", "tools/smoke/run_smoke.dart"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "detail": "üß™ Execute comprehensive smoke tests for all tools"
    },
    {
      "label": "üßæ Run Functions Tests",
      "type": "shell",
      "command": "npm",
      "args": ["test"],
      "options": {
        "cwd": "${workspaceFolder}/functions"
      },
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": ["$eslint-stylish"],
      "detail": "üßæ Run Firebase Functions unit tests"
    },
    {
      "label": "üöÄ Start Flutter Web App",
      "type": "shell",
      "command": "flutter",
      "args": ["run", "-d", "chrome", "--web-port", "3000"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "isBackground": true,
      "runOptions": {
        "instanceLimit": 1
      },
      "detail": "üöÄ Start Flutter web development server on port 3000"
    },
    {
      "label": "üîç Check Emulators Status",
      "type": "shell",
      "command": "curl",
      "args": ["-f", "-s", "http://localhost:4000"],
      "group": "test",
      "presentation": {
        "echo": false,
        "reveal": "silent",
        "focus": false
      },
      "problemMatcher": [],
      "detail": "üîç Verify Firebase emulators are running"
    },
    {
      "label": "üõë Stop All Development Services",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "pkill -f 'firebase.*emulators' || true; pkill -f 'stripe.*listen' || true; pkill -f 'flutter.*run' || true"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "detail": "üõë Stop Firebase emulators, Stripe CLI, and Flutter dev server"
    },
    {
      "label": "üé≠ Run E2E Billing Test",
      "type": "shell",
      "command": "node",
      "args": ["scripts/e2e/billing-checkout.mjs"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "detail": "üé≠ Run comprehensive billing checkout E2E test"
    },
    {
      "label": "üîó Run E2E Webhook Test",
      "type": "shell",
      "command": "node",
      "args": ["scripts/e2e/webhook-ack.mjs"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "detail": "üîó Run webhook acknowledgment E2E test"
    },
    {
      "label": "üí® Run Smoke Test Suite",
      "type": "shell",
      "command": "node",
      "args": ["scripts/e2e/smoke-suite.mjs"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "detail": "üí® Run 10-path smoke test suite"
    },
    {
      "label": "üìä Generate Staging Readiness Report",
      "type": "shell",
      "command": "node",
      "args": ["scripts/staging-readiness-report.mjs"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "detail": "üìä Generate comprehensive staging readiness report"
    },
    {
      "label": "üöÄ Deploy to Staging",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "echo 'üöÄ Deploying to staging...' && firebase use toolz-space-staging && firebase deploy --project toolz-space-staging"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "NODE_ENV": "staging"
        }
      },
      "detail": "üöÄ Deploy Functions and Hosting to staging Firebase project"
    },
    {
      "label": "üß™ Full Staging Validation",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "echo 'üß™ Running full staging validation...' && node scripts/e2e/billing-checkout.mjs && node scripts/e2e/webhook-ack.mjs && node scripts/e2e/smoke-suite.mjs && node scripts/staging-readiness-report.mjs"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "new"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "detail": "üß™ Run complete staging validation: E2E tests + smoke suite + report"
    }
  ],
  "inputs": [
    {
      "id": "issueNumber",
      "description": "Enter the GitHub issue number",
      "type": "promptString"
    },
    {
      "id": "cleanupAction",
      "description": "Select cleanup action",
      "type": "pickString",
      "options": ["preview", "failed", "old", "cache", "all", "full", "help"],
      "default": "preview"
    }
  ]
}
