name: Branch CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  checks: write
  pull-requests: write

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-branch:
    name: Validate Branch Name
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Check branch naming convention
        run: |
          branch="${{ github.ref_name }}"
          echo "Checking branch name: $branch"

          # Allow some special branches
          if [[ "$branch" =~ ^(develop|staging|hotfix/.+)$ ]]; then
            echo " Special branch allowed: $branch"
            exit 0
          fi

          # Check standard naming convention: type/issue-###-description
          if [[ "$branch" =~ ^(feat|fix|chore|docs)/issue-[0-9]+-[a-z0-9-]+$ ]]; then
            echo " Branch name follows convention: $branch"
            exit 0
          fi

          echo " Branch name '$branch' does not follow convention"
          echo "Expected format: {feat|fix|chore|docs}/issue-###-description"
          echo "Examples:"
          echo "  - feat/issue-123-add-user-auth"
          echo "  - fix/issue-456-fix-login-bug"
          echo "  - chore/issue-789-update-deps"
          echo "  - docs/issue-321-api-documentation"

          exit 1

  run-tests:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Format check
        run: dart format . --set-exit-if-changed

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ github.run_id }}
          path: coverage/
          retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload security results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-scan-${{ github.run_id }}
          path: "trivy-results.sarif"
          retention-days: 30

  ci-status:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [validate-branch, run-tests, security-scan]
    if: always()

    steps:
      - name: Report CI results
        run: |
          echo "## CI Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Branch validation
          branch_result="${{ needs.validate-branch.result }}"
          if [ "$branch_result" = "success" ]; then
            echo " **Branch Name**: Valid" >> $GITHUB_STEP_SUMMARY
          elif [ "$branch_result" = "skipped" ]; then
            echo " **Branch Name**: Skipped (not a push)" >> $GITHUB_STEP_SUMMARY
          else
            echo " **Branch Name**: Invalid" >> $GITHUB_STEP_SUMMARY
          fi

          # Test results
          test_result="${{ needs.run-tests.result }}"
          if [ "$test_result" = "success" ]; then
            echo " **Tests**: All passed" >> $GITHUB_STEP_SUMMARY
          elif [ "$test_result" = "skipped" ]; then
            echo " **Tests**: Skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo " **Tests**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          # Security scan
          security_result="${{ needs.security-scan.result }}"
          if [ "$security_result" = "success" ]; then
            echo " **Security**: No critical issues" >> $GITHUB_STEP_SUMMARY
          else
            echo " **Security**: Scan completed with warnings" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow**: Branch CI" >> $GITHUB_STEP_SUMMARY

      - name: Determine overall status
        run: |
          # Required checks that must pass
          required_checks=(
            "${{ needs.validate-branch.result }}"
            "${{ needs.run-tests.result }}"
          )

          failed=false

          for result in "${required_checks[@]}"; do
            if [ "$result" != "success" ] && [ "$result" != "skipped" ]; then
              failed=true
              break
            fi
          done

          if [ "$failed" = "true" ]; then
            echo " CI checks failed - cannot proceed to PR"
            exit 1
          fi

          echo " All CI checks passed - ready for PR"
