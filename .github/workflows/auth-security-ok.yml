name: 🔐 Auth Security Check (Composite)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:


jobs:
  rules-test:
    name: 🔒 Firestore & Storage Rules Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: test/security/package.json

      - name: Install Dependencies
        working-directory: test/security
        run: npm ci

      - name: Start Firebase Emulators
        run: |
          npm install -g firebase-tools
          firebase emulators:start --only firestore,storage &
          sleep 10

      - name: Run Security Rules Tests
        working-directory: test/security
        run: npm run test:rules

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/security/lcov.info
          flags: security-rules
          fail_ci_if_error: false

  auth-e2e:
    name: 🔑 Auth E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: |
          flutter pub get
          npm install
          npx playwright install --with-deps chromium

      - name: Start Firebase Emulators
        run: |
          npm install -g firebase-tools
          firebase emulators:start &
          sleep 15

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Serve Flutter Web
        run: |
          cd build/web
          python3 -m http.server 51268 &
          sleep 5

      - name: Run Auth E2E Tests
        run: npx playwright test e2e/auth.e2e.spec.ts
        env:
          BASE_URL: http://localhost:51268

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-auth
          path: playwright-report/
          retention-days: 7

  link-anon-e2e:
    name: 🔗 Anonymous Linking E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: |
          flutter pub get
          npm install
          npx playwright install --with-deps chromium

      - name: Start Firebase Emulators
        run: |
          npm install -g firebase-tools
          firebase emulators:start &
          sleep 15

      - name: Build & Serve Flutter Web
        run: |
          flutter build web --release
          cd build/web
          python3 -m http.server 51268 &
          sleep 5

      - name: Run Anonymous Linking Tests
        run: npx playwright test e2e/link-anon.e2e.spec.ts
        env:
          BASE_URL: http://localhost:51268

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-link-anon
          path: playwright-report/

  billing-link-e2e:
    name: 💳 Billing Webhook E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: |
          flutter pub get
          cd functions && npm ci && cd ..
          npm install
          npx playwright install --with-deps chromium

      - name: Start Firebase Emulators
        run: |
          npm install -g firebase-tools
          firebase emulators:start &
          sleep 20

      - name: Build & Serve Flutter Web
        run: |
          flutter build web --release
          cd build/web
          python3 -m http.server 51268 &
          sleep 5

      - name: Run Billing Webhook Tests
        run: npx playwright test e2e/billing-link.e2e.spec.ts
        env:
          BASE_URL: http://localhost:51268
          FUNCTIONS_URL: http://localhost:5001

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-billing
          path: playwright-report/

  tools-gating:
    name: 🔒 Tools Gating & Quota Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies
        run: |
          flutter pub get
          npm install
          npx playwright install --with-deps chromium

      - name: Start Firebase Emulators
        run: |
          npm install -g firebase-tools
          firebase emulators:start &
          sleep 15

      - name: Build & Serve Flutter Web
        run: |
          flutter build web --release
          cd build/web
          python3 -m http.server 51268 &
          sleep 5

      - name: Run Tools Gating Tests
        run: npx playwright test e2e/tools-gating.e2e.spec.ts
        env:
          BASE_URL: http://localhost:51268

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-tools-gating
          path: playwright-report/

  auth-security-ok:
    name: ✅ Auth Security OK (Composite Check)
    needs: [ rules-test, auth-e2e, link-anon-e2e, billing-link-e2e, tools-gating ]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check All Tests Passed
        run: |
          echo "🔍 Checking all security tests..."
          echo "Rules Test: ${{ needs.rules-test.result }}"
          echo "Auth E2E: ${{ needs.auth-e2e.result }}"
          echo "Link Anon E2E: ${{ needs.link-anon-e2e.result }}"
          echo "Billing E2E: ${{ needs.billing-link-e2e.result }}"
          echo "Tools Gating: ${{ needs.tools-gating.result }}"

          if [ "${{ needs.rules-test.result }}" != "success" ] ||
             [ "${{ needs.auth-e2e.result }}" != "success" ] ||
             [ "${{ needs.link-anon-e2e.result }}" != "success" ] ||
             [ "${{ needs.billing-link-e2e.result }}" != "success" ] ||
             [ "${{ needs.tools-gating.result }}" != "success" ]; then
            echo "❌ Auth Security Check FAILED"
            echo "::error::One or more security tests failed. Deployment blocked."
            exit 1
          fi

          echo "✅ Auth Security Check PASSED - Ready for deployment"

      - name: Create Status Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const allPassed = [
              '${{ needs.rules-test.result }}',
              '${{ needs.auth-e2e.result }}',
              '${{ needs.link-anon-e2e.result }}',
              '${{ needs.billing-link-e2e.result }}',
              '${{ needs.tools-gating.result }}'
            ].every(r => r === 'success');

            const status = allPassed ? '✅ PASSED' : '❌ FAILED';
            const emoji = allPassed ? '🎉' : '🚫';

            const body = `## ${emoji} Auth Security Check ${status}

            | Test Suite | Status |
            |------------|--------|
            | 🔒 Rules Tests | ${{ needs.rules-test.result }} |
            | 🔑 Auth E2E | ${{ needs.auth-e2e.result }} |
            | 🔗 Anonymous Linking | ${{ needs.link-anon-e2e.result }} |
            | 💳 Billing Webhooks | ${{ needs.billing-link-e2e.result }} |
            | 🔒 Tools Gating | ${{ needs.tools-gating.result }} |

            ${allPassed
              ? '✅ **All security checks passed!** This PR is safe to deploy.'
              : '❌ **Security checks failed.** Please fix failing tests before deploying.'
            }

            [View Details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
permissions:
  contents: read
  actions: read
