name: üöÄ PR CI (Lean & Fast)

on:
    pull_request:
        branches: [main, develop]
    push:
        branches: [main, develop]
    workflow_dispatch:

# Cancel in-progress runs when a new run is triggered
concurrency:
    group: pr-ci-${{ github.ref }}
    cancel-in-progress: true

jobs:
    flutter_build:
        name: Flutter Build & Analyze
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - name: üì• Checkout
              uses: actions/checkout@v4

            - name: üéØ Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: "3.24.0"
                  channel: "stable"
                  cache: true

            - name: üì¶ Get Dependencies
              run: flutter pub get

            - name: üîç Analyze (fail on errors only)
              run: |
                  flutter analyze --no-pub > analyze.log 2>&1 || true
                  if grep -q "error ‚Ä¢" analyze.log; then
                    echo "‚ùå Analysis found errors"
                    cat analyze.log
                    exit 1
                  else
                    echo "‚úÖ No errors found (warnings/infos ignored for PR speed)"
                    grep "error ‚Ä¢\|warning ‚Ä¢\|info ‚Ä¢" analyze.log | head -20 || true
                  fi

            - name: üèóÔ∏è Build Web (Release)
              run: flutter build web --release

            - name: üì§ Upload Build Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: flutter-build
                  path: build/web
                  retention-days: 7

    functions_build:
        name: Functions Build & Lint
        runs-on: ubuntu-latest
        timeout-minutes: 8
        steps:
            - name: üì• Checkout
              uses: actions/checkout@v4

            - name: üü¢ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "npm"
                  cache-dependency-path: functions/package-lock.json

            - name: üì¶ Install Dependencies
              working-directory: functions
              run: npm ci

            - name: üîç Lint
              working-directory: functions
              run: npm run lint

            - name: üèóÔ∏è TypeScript Build
              working-directory: functions
              run: npx tsc --noEmit

    tests_flutter:
        name: Flutter Tests
        runs-on: ubuntu-latest
        timeout-minutes: 8
        steps:
            - name: üì• Checkout
              uses: actions/checkout@v4

            - name: üéØ Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: "3.24.0"
                  channel: "stable"
                  cache: true

            - name: üì¶ Get Dependencies
              run: flutter pub get

            - name: üß™ Run Tests
              run: flutter test --reporter expanded --coverage

            - name: üìä Upload Coverage
              uses: codecov/codecov-action@v4
              with:
                  files: coverage/lcov.info
                  flags: flutter
                  fail_ci_if_error: false
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    tests_functions:
        name: Functions Unit Tests
        runs-on: ubuntu-latest
        timeout-minutes: 8
        steps:
            - name: üì• Checkout
              uses: actions/checkout@v4

            - name: üü¢ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "npm"
                  cache-dependency-path: functions/package-lock.json

            - name: üì¶ Install Dependencies
              working-directory: functions
              run: npm ci

            - name: üß™ Run Unit Tests
              working-directory: functions
              run: npm run test -- --testPathIgnorePatterns=e2e

    security_smoke:
        name: Security Smoke Tests
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            - name: üì• Checkout
              uses: actions/checkout@v4

            - name: üü¢ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  cache: "npm"
                  cache-dependency-path: test/security/package-lock.json

            - name: üì¶ Install Security Test Dependencies
              working-directory: test/security
              run: npm ci

            - name: üîê Run Security Smoke Tests (@smoke tagged only)
              working-directory: test/security
              run: npm run test:smoke || npm run test:rules

    pr_summary:
        name: PR Summary
        runs-on: ubuntu-latest
        needs:
            [
                flutter_build,
                functions_build,
                tests_flutter,
                tests_functions,
                security_smoke,
            ]
        if: always()
        steps:
            - name: üìä Check Results
              run: |
                  echo "## ‚úÖ PR CI Results" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
                  echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
                  echo "| Flutter Build | ${{ needs.flutter_build.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Functions Build | ${{ needs.functions_build.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Flutter Tests | ${{ needs.tests_flutter.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Functions Tests | ${{ needs.tests_functions.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| Security Smoke | ${{ needs.security_smoke.result }} |" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "‚è±Ô∏è **Target**: <10 minutes total runtime" >> $GITHUB_STEP_SUMMARY
