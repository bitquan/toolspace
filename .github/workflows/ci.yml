name: CI

permissions:
    actions: read
    contents: read
    security-events: write

concurrency:
    group: ci-${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    backend-qa:
        name: Backend QA
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: functions/package-lock.json

            - name: Install dependencies
              run: |
                  cd functions
                  npm ci

            - name: Run QA checks
              run: |
                  cd functions
                  npm run qa

    flutter-qa:
        name: Flutter QA
        runs-on: ubuntu-latest
        timeout-minutes: 15  # Prevent hanging jobs

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  channel: "stable"
                  flutter-version: "3.24.3"  # Pin specific version for better caching
                  cache: true

            - name: Flutter version
              run: flutter --version

            - name: Get dependencies
              run: flutter pub get

            - name: Format check
              run: dart format --output=none --set-exit-if-changed .

            - name: Analyze code
              run: flutter analyze

            - name: Run tests
              run: |
                  if [ -d "test" ]; then
                    flutter test --coverage
                  else
                    echo "No test directory found, skipping tests"
                  fi

            - name: Upload coverage artifact (if present)
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-lcov
                  path: coverage/lcov.info
                  if-no-files-found: ignore

    security-scan:
        name: Security Scan
        runs-on: ubuntu-latest
        # Only run security scan on main branch pushes and PRs to main
        if: github.ref == 'refs/heads/main' || github.base_ref == 'main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v5

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload SARIF as artifact (fallback when code scanning not enabled)
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: trivy-sarif-results
                  path: "trivy-results.sarif"
                  if-no-files-found: warn

            # Try to upload to GitHub Security tab if code scanning is enabled
            # If not enabled, this will warn but not fail the workflow
            - name: Upload Trivy scan results to GitHub Security
              uses: github/codeql-action/upload-sarif@v3
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"
              continue-on-error: true # Don't fail if code scanning isn't enabled

    ci-gate:
        name: CI Gate (format/analyze/test)
        runs-on: ubuntu-latest
        needs: [backend-qa, flutter-qa, security-scan]
        if: always()
        steps:
            - name: Report dependent job results
              run: |
                  echo "Backend QA: ${{ needs.backend-qa.result }}"
                  echo "Flutter QA: ${{ needs.flutter-qa.result }}"
                  echo "Security Scan: ${{ needs.security-scan.result || 'skipped' }}"
                  
                  # Check required jobs (backend-qa and flutter-qa must succeed)
                  if [ "${{ needs.backend-qa.result }}" != "success" ] || [ "${{ needs.flutter-qa.result }}" != "success" ]; then
                    echo "One or more required checks failed." >&2
                    exit 1
                  fi
                  
                  # Security scan is optional (may be skipped on non-main branches)
                  if [ "${{ needs.security-scan.result }}" = "failure" ]; then
                    echo "Security scan failed, but continuing..." >&2
                  fi
