// Mocks generated by Mockito 5.4.6 from annotations
// in toolspace/test/tools/qr_maker_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:cloud_functions/cloud_functions.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:toolspace/billing/billing_service.dart' as _i6;
import 'package:toolspace/billing/billing_types.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFunctions_1 extends _i1.SmartFake
    implements _i3.FirebaseFunctions {
  _FakeFirebaseFunctions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAuth_2 extends _i1.SmartFake implements _i4.FirebaseAuth {
  _FakeFirebaseAuth_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEntitlements_3 extends _i1.SmartFake implements _i5.Entitlements {
  _FakeEntitlements_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBillingProfile_4 extends _i1.SmartFake
    implements _i5.BillingProfile {
  _FakeBillingProfile_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsageRecord_5 extends _i1.SmartFake implements _i5.UsageRecord {
  _FakeUsageRecord_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEntitlementCheckResult_6 extends _i1.SmartFake
    implements _i5.EntitlementCheckResult {
  _FakeEntitlementCheckResult_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BillingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBillingService extends _i1.Mock implements _i6.BillingService {
  MockBillingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);

  @override
  _i3.FirebaseFunctions get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFirebaseFunctions_1(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i3.FirebaseFunctions);

  @override
  _i4.FirebaseAuth get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeFirebaseAuth_2(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i4.FirebaseAuth);

  @override
  _i7.Stream<_i5.BillingProfile> get billingProfileStream =>
      (super.noSuchMethod(
        Invocation.getter(#billingProfileStream),
        returnValue: _i7.Stream<_i5.BillingProfile>.empty(),
      ) as _i7.Stream<_i5.BillingProfile>);

  @override
  _i7.Stream<_i5.UsageRecord> get usageStream => (super.noSuchMethod(
        Invocation.getter(#usageStream),
        returnValue: _i7.Stream<_i5.UsageRecord>.empty(),
      ) as _i7.Stream<_i5.UsageRecord>);

  @override
  _i7.Future<Map<String, dynamic>> getPricingConfig() => (super.noSuchMethod(
        Invocation.method(
          #getPricingConfig,
          [],
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<Map<String, dynamic>?> getPlan(_i5.PlanId? planId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlan,
          [planId],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<_i5.Entitlements> getEntitlements(_i5.PlanId? planId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEntitlements,
          [planId],
        ),
        returnValue: _i7.Future<_i5.Entitlements>.value(_FakeEntitlements_3(
          this,
          Invocation.method(
            #getEntitlements,
            [planId],
          ),
        )),
      ) as _i7.Future<_i5.Entitlements>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getAllPlans() => (super.noSuchMethod(
        Invocation.method(
          #getAllPlans,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  void startListening() => super.noSuchMethod(
        Invocation.method(
          #startListening,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopListening() => super.noSuchMethod(
        Invocation.method(
          #stopListening,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i5.BillingProfile> getBillingProfile() => (super.noSuchMethod(
        Invocation.method(
          #getBillingProfile,
          [],
        ),
        returnValue: _i7.Future<_i5.BillingProfile>.value(_FakeBillingProfile_4(
          this,
          Invocation.method(
            #getBillingProfile,
            [],
          ),
        )),
      ) as _i7.Future<_i5.BillingProfile>);

  @override
  _i7.Future<_i5.UsageRecord> getTodayUsage() => (super.noSuchMethod(
        Invocation.method(
          #getTodayUsage,
          [],
        ),
        returnValue: _i7.Future<_i5.UsageRecord>.value(_FakeUsageRecord_5(
          this,
          Invocation.method(
            #getTodayUsage,
            [],
          ),
        )),
      ) as _i7.Future<_i5.UsageRecord>);

  @override
  _i7.Future<_i5.EntitlementCheckResult> canPerformHeavyOp() =>
      (super.noSuchMethod(
        Invocation.method(
          #canPerformHeavyOp,
          [],
        ),
        returnValue: _i7.Future<_i5.EntitlementCheckResult>.value(
            _FakeEntitlementCheckResult_6(
          this,
          Invocation.method(
            #canPerformHeavyOp,
            [],
          ),
        )),
      ) as _i7.Future<_i5.EntitlementCheckResult>);

  @override
  _i7.Future<_i5.EntitlementCheckResult> canProcessFileSize(int? fileSize) =>
      (super.noSuchMethod(
        Invocation.method(
          #canProcessFileSize,
          [fileSize],
        ),
        returnValue: _i7.Future<_i5.EntitlementCheckResult>.value(
            _FakeEntitlementCheckResult_6(
          this,
          Invocation.method(
            #canProcessFileSize,
            [fileSize],
          ),
        )),
      ) as _i7.Future<_i5.EntitlementCheckResult>);

  @override
  _i7.Future<_i5.EntitlementCheckResult> canProcessBatchSize(int? batchSize) =>
      (super.noSuchMethod(
        Invocation.method(
          #canProcessBatchSize,
          [batchSize],
        ),
        returnValue: _i7.Future<_i5.EntitlementCheckResult>.value(
            _FakeEntitlementCheckResult_6(
          this,
          Invocation.method(
            #canProcessBatchSize,
            [batchSize],
          ),
        )),
      ) as _i7.Future<_i5.EntitlementCheckResult>);

  @override
  _i7.Future<_i5.EntitlementCheckResult> canAccessTool(String? toolId) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAccessTool,
          [toolId],
        ),
        returnValue: _i7.Future<_i5.EntitlementCheckResult>.value(
            _FakeEntitlementCheckResult_6(
          this,
          Invocation.method(
            #canAccessTool,
            [toolId],
          ),
        )),
      ) as _i7.Future<_i5.EntitlementCheckResult>);

  @override
  _i7.Future<void> trackHeavyOp() => (super.noSuchMethod(
        Invocation.method(
          #trackHeavyOp,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> trackFileProcessed(int? bytes) => (super.noSuchMethod(
        Invocation.method(
          #trackFileProcessed,
          [bytes],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<Map<String, dynamic>> createCheckoutSession({
    required _i5.PlanId? planId,
    required String? successUrl,
    required String? cancelUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCheckoutSession,
          [],
          {
            #planId: planId,
            #successUrl: successUrl,
            #cancelUrl: cancelUrl,
          },
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<String> createPortalLink(String? returnUrl) => (super.noSuchMethod(
        Invocation.method(
          #createPortalLink,
          [returnUrl],
        ),
        returnValue: _i7.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #createPortalLink,
            [returnUrl],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
