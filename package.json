{
  "name": "ops-delta-scripts",
  "version": "1.0.0",
  "description": "OPS-Delta adaptive sprint management scripts",
  "type": "module",
  "scripts": {
    "velocity": "node scripts/velocity.mjs",
    "report": "node scripts/report.mjs",
    "insights": "node scripts/delta-insights.mjs",
    "velocity-dry": "node scripts/velocity.mjs --dry-run",
    "report-dry": "node scripts/report.mjs --dry-run",
    "test-scheduler": "echo 'Use: gh workflow run delta-scheduler.yml -f dry_run=true'",
    "test-progress": "echo 'Use: gh workflow run delta-progress.yml -f dry_run=true'",
    "test-report": "echo 'Use: gh workflow run delta-report.yml -f dry_run=true'",
    "test-watchdog": "echo 'Use: gh workflow run delta-watchdog.yml -f dry_run=true'",
    "test-notify": "echo 'Use: gh workflow run delta-notify.yml -f dry_run=true'",
    "test-digest": "echo 'Use: gh workflow run delta-digest.yml -f dry_run=true'",
    "push:preflight": "powershell -ExecutionPolicy Bypass -File scripts/git/push-preflight.ps1",
    "push": "npm run push:preflight && git push",
    "cleanup:preview": "gh workflow run workflow-cleanup.yml -f cleanup_scope=failed_runs -f dry_run=true",
    "cleanup:failed": "gh workflow run workflow-cleanup.yml -f cleanup_scope=failed_runs -f dry_run=false",
    "cleanup:old": "gh workflow run workflow-cleanup.yml -f cleanup_scope=old_runs -f days_to_keep=7 -f dry_run=false",
    "cleanup:cache": "gh workflow run workflow-cleanup.yml -f cleanup_scope=cache_cleanup -f dry_run=false",
    "cleanup:full": "gh workflow run workflow-cleanup.yml -f cleanup_scope=full_cleanup -f dry_run=false",
    "cleanup:execute": "gh workflow run workflow-cleanup.yml -f cleanup_scope=failed_runs -f dry_run=false && echo 'Cleanup triggered! Monitor with: gh run list --workflow=workflow-cleanup.yml'",
    "cleanup:all": "gh workflow run workflow-cleanup.yml -f cleanup_scope=all_runs -f dry_run=false && echo '‚ö†Ô∏è DELETING ALL WORKFLOWS! Monitor with: gh run list --workflow=workflow-cleanup.yml'",
    "cleanup:nuclear": "gh workflow run nuclear-cleanup.yml -f confirmation=DELETE_ALL_WORKFLOWS -f keep_recent=0 && echo 'üî• NUCLEAR CLEANUP TRIGGERED! This will delete EVERYTHING!'",
    "cleanup:all-preview": "gh workflow run workflow-cleanup.yml -f cleanup_scope=all_runs -f dry_run=true && echo 'Preview mode: showing what ALL workflows would be deleted'",
    "cleanup:help": "echo 'Workflow Cleanup Commands:' && echo '  npm run cleanup:preview     - Preview what would be cleaned' && echo '  npm run cleanup:execute     - Execute failed runs cleanup' && echo '  npm run cleanup:failed      - Clean failed/cancelled runs' && echo '  npm run cleanup:old         - Clean runs older than 7 days' && echo '  npm run cleanup:cache       - Clean cache and artifacts' && echo '  npm run cleanup:full        - ‚ö†Ô∏è  FULL cleanup (ALL data)' && echo '  npm run cleanup:all         - üî• DELETE ALL WORKFLOWS' && echo '  npm run cleanup:all-preview - Preview ALL workflows deletion' && echo '  npm run cleanup:nuclear     - üî• NUCLEAR: Delete everything instantly'",
    "repo:audit": "node scripts/audit-repo-cleanup.mjs",
    "repo:cleanup": "node scripts/audit-repo-cleanup.mjs --execute",
    "repo:safe-cleanup": "node scripts/safe-workflow-cleanup.mjs",
    "preflight": "node scripts/preflight.mjs",
    "preflight:quick": "node scripts/preflight.mjs --quick",
    "postflight": "node scripts/postflight.mjs",
    "cleanup": "gh workflow run ops-cleanup.yml",
    "setup:hooks": "husky install",
    "prepare": "husky"
  },
  "dependencies": {
    "@octokit/rest": "^20.0.2",
    "dayjs": "^1.11.10",
    "firebase-admin": "^13.5.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.56.0",
    "@types/node": "^24.7.0"
  },
  "keywords": [
    "sprint-management",
    "automation",
    "github-actions",
    "velocity-tracking",
    "ops-delta"
  ],
  "author": "OPS-Delta System",
  "license": "MIT"
}
